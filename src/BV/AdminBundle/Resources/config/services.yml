services:
    sonata.admin.news:
        class: BV\AdminBundle\Admin\NewsAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Content", label: "News" }
        arguments:
            - ~
            - BV\FrontBundle\Entity\News
            - AdminBundle:NewsAdmin
            - @service_container
        calls:
            - [ setTranslationDomain, [FrontBundle] ]
            - [ setTemplate, [edit, AdminBundle:Content:edit.html.twig]]
    sonata.admin.vacation:
        class: BV\AdminBundle\Admin\VacationAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Calendrier", label: "Vacances" }
        arguments:
            - ~
            - BV\FrontBundle\Entity\Vacations
            - AdminBundle:Vacations
        calls:
            - [ setTranslationDomain, [FrontBundle] ]
            - [ setTemplate, [edit, AdminBundle:Vacation:edit.html.twig]]
    sonata.admin.tasks:
        class: BV\AdminBundle\Admin\TasksAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Tasks", label: "Tâches" }
        arguments:
            - ~
            - BV\FrontBundle\Entity\Vacations
            - AdminBundle:Tasks
        calls:
            - [ setTranslationDomain, [AdminBundle] ]
            - [ setTemplate, [edit, AdminBundle:Tasks:edit.html. twig]]
    sonata.admin.team:
        class: BV\AdminBundle\Admin\TeamAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "%sonata.user.admin.groupname%", label: "Equipes" }
        arguments:
            - ~
            - BV\FrontBundle\Entity\Team
            - ~
            - @service_container
        calls:
            - [ setTranslationDomain, [FrontBundle] ]
    sonata.admin.static:
        class: BV\AdminBundle\Admin\StaticAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Content", label: "Pages statiques" }
        arguments:
            - ~
            - BV\FrontBundle\Entity\CmsPage
            - ~
        calls:
            - [ setTranslationDomain, [FrontBundle] ]
            - [ setTemplate, [edit, AdminBundle:Content:edit.html.twig]]
    sonata.admin.config:
        class: BV\AdminBundle\Admin\ConfigAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Paramètres", label: "Points de configuration" }
        arguments:
            - ~
            - BV\FrontBundle\Entity\Config
            - ~
        calls:
            - [ setTranslationDomain, [FrontBundle] ]
    sonata.admin.notification:
        class: BV\AdminBundle\Admin\NotificationAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Paramètres", label: "Notifications" }
        arguments:
            - ~
            - Tools\LogBundle\Entity\SystemLog
            - AdminBundle:Static
        calls:
            - [ setTranslationDomain, [LogBundle] ]
            - [ setTemplate, [inner_list_row, AdminBundle:Notification:inner_row_comment.html.twig], [base_list_field, [SonataAdminBundle:CRUD:base_list_flat_field.html.twig]]]
    sonata.user.admin.user:
            class: "%sonata.user.admin.user.class%" #BV\AdminBundle\Admin\UserAdmin
            tags:
                - { name: sonata.admin, manager_type: orm, group: "%sonata.user.admin.groupname%", label: "users", label_catalogue: "SonataUserBundle", label_translator_strategy: "sonata.admin.label.strategy.underscore" }
            arguments:
                - ~
                - "%sonata.user.admin.user.entity%"  #Tools\FrontBundle\Entity\User
                - AdminBundle:User
                - @service_container
            calls:
                - [ setUserManager, ["@fos_user.user_manager"] ]
                - [ setTranslationDomain, ["%sonata.user.admin.user.translation_domain%"] ]
                - [ setTemplate, [edit, AdminBundle:User:edit.html.twig]]
    bv_user.form.level_list:
        class: Sonata\CoreBundle\Form\Type\StatusType
        arguments: [ "%fos_user.model.user.class%", "getLevelList", "bv_user_level" ]
        tags:
            - { name: form.type, alias: bv_user_level }
    bv_user.image_type_extension:
        class: BV\AdminBundle\Form\Extension\ImageTypeExtension
        tags:
            - { name: form.type_extension, alias: file }
    bv.admin.form.type.text_confirm:
        class: BV\AdminBundle\Form\Field\TextConfirm
        tags:
            - { name: form.type, alias: text_confirm }
    bv.admin.getNotifications:
        class: BV\AdminBundle\Twig\Notifications
        arguments: [@service_container]
        tags:
            - { name: twig.extension }
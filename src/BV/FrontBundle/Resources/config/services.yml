services:
    bv_user.registration.form.type:
        class: BV\FrontBundle\Form\Type\RegistrationFormType
        tags:
            - { name: form.type, alias: bv_user_registration }
    bv_user.profile.form.type:
        class: BV\FrontBundle\Form\Type\ProfileFormType
        tags:
            - { name: form.type, alias: bv_user_profile }
    form.type.autocomplete:
        class: BV\FrontBundle\Form\Type\AutocompleteType
        tags:
            - { name: form.type, alias: autocomplete }
    form.type.datePicker:
        class: BV\FrontBundle\Form\Type\DatePickerType
        tags:
            - { name: form.type, alias: datePicker }
    bv_user.form.handler.registration:
        class: BV\FrontBundle\Form\Handler\RegistrationFormHandler
        arguments: ["@fos_user.registration.form", "@request", "@fos_user.user_manager", "@fos_user.mailer", "@fos_user.util.token_generator", "@service_container"]
        scope: request
        public: false
    bv_mailer:
        class: BV\FrontBundle\Services\Email
        arguments: [ "@mailer", "@templating", "@doctrine.orm.entity_manager" ]
    bv.user_manager:
        class: BV\FrontBundle\Doctrine\UserManager
        arguments: [ "@security.encoder_factory", "@fos_user.util.username_canonicalizer", "@fos_user.util.email_canonicalizer", "@fos_user.entity_manager", "%fos_user.model.user.class%", "@tools.logbundle.logger" ]
        public: false
        calls:
            - [ setContainer, ["@service_container"] ]
    bv_user.form.status_list:
        class: Sonata\CoreBundle\Form\Type\StatusType
        arguments: [ "%fos_user.model.user.class%", "getStatusList", "bv_user_status" ]
        tags:
            - { name: form.type, alias: bv_user_status }
    bv_user.form.level_list:
        class: Sonata\CoreBundle\Form\Type\StatusType
        arguments: [ "%fos_user.model.user.class%", "getLevelList", "bv_user_level" ]
        tags:
            - { name: form.type, alias: bv_user_level }
    bv_calendar.form.bv_events_type:
        class: Sonata\CoreBundle\Form\Type\StatusType
        arguments: [ "BV\FrontBundle\Entity\Events", "getEventsType", "bv_events_type" ]
        tags:
            - { name: form.type, alias: bv_events_type }
    bv_team.form.type_list:
        class: Sonata\CoreBundle\Form\Type\StatusType
        arguments: [ "BV\FrontBundle\Entity\Team", "getTypeList", "bv_team_type" ]
        tags:
            - { name: form.type, alias: bv_team_type }
